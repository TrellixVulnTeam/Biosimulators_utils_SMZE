name: Lint, test, and compile documentation

on:
  push:
    branches: '**'
    tags-ignore: '*.*'

jobs:
  build:
    name: Lint, test, and compile documentation
    runs-on: ubuntu-latest
    outputs:
      docsChanged: ${{ steps.commit-docs.outputs.docsChanged }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.optional.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip and setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      # install package
      - name: Install the package
        run: python -m pip install .[all]

      # lint
      - name: Install flake8
        run: python -m pip install flake8

      - name: Lint the package
        run: python -m flake8

      # test and upload coverage report to Codecov
      - name: Install pytest
        run: python -m pip install pytest pytest-cov

      - name: Install the requirements for the tests
        run: python -m pip install .[tests]

      - name: Run the tests
        run: python -m pytest tests/ --cov=./biosimulators_utils --cov-report=xml

      - name: Upload the coverage report to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          file: ./coverage.xml

      # compile documentation and push to repo
      - name: Install the requirements for compiling the documentation
        run: python -m pip install -r docs-src/requirements.txt

      - name: Compile the documentation 
        run: |
          sphinx-apidoc . setup.py --output-dir docs-src/source --force --module-first --no-toc
          sphinx-build docs-src docs
      
      - id: commit-docs
        name: Commit the compiled documentation
        if: github.ref == 'refs/heads/dev'
        run: |
          git pull
          git config --local user.email "biosimulators.daemon@gmail.com"
          git config --local user.name "biosimulatorsdaemon"
          git add docs
          set +e
          git commit -m "Updating compiled documentation"
          if [[ $? = 0 ]]; then
            docsChanged=1
          else
            docsChanged=0
          fi
          echo "::set-output name=docsChanged::$docsChanged"

      - name: Push the compiled documentation
        if: github.ref == 'refs/heads/dev' && steps.commit-docs.outputs.docsChanged == '1'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
