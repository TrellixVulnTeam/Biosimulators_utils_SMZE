name: Release a new version

on:
  push:
    tags:

jobs:
  getVersionNumber:
    name: Get version number
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version-number.outputs.version }}
    steps:
      - id: get-version-number
        name: Get version number
        env:
          TAG: ${{ github.ref }}
        run: |
          version="${TAG/refs\/tags\//}"
          echo "::set-output name=version::$version"

  release:
    name: Release a new version
    needs: getVersionNumber
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # GitHub
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.getVersionNumber.outputs.version }}
          release_name: Release ${{ needs.getVersionNumber.outputs.version }}

      # PyPI
      - name: Install pandoc
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends wget

          wget https://github.com/jgm/pandoc/releases -O /tmp/pandocVersions.html
          urlPart=`grep "\.deb" /tmp/pandocVersions.html | head -n 1 | cut -d'/' -f2-7 | cut -d'"' -f1`
          wget "https://github.com/$urlPart" -O /tmp/pandoc.deb
          sudo dpkg -i /tmp/pandoc.deb
          rm /tmp/pandocVersions.html
          rm /tmp/pandoc.deb

      - name: Convert README to .rst format
        run: pandoc --from=gfm --output=README.rst --to=rst README.md

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.optional.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip and setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install wheel twine

      - name: Create packages to upload to PyPI
        run: |
          python setup.py sdist
          python setup.py bdist_wheel

      - name: Upload packages to PyPI
        run: |
          twine upload \
            --username __token__ \
            --password "${{ secrets.PYPI_TOKEN }}" \
            dist/*